{
  "name": "zencoder",
  "displayName": "Zen Coder",
  "description": "",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.99.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "zencoder-view-container",
          "title": "Zen Coder",
          "icon": "$(code)"
        }
      ]
    },
    "views": {
      "zencoder-view-container": [
        {
          "type": "webview",
          "id": "zencoder.views.chat",
          "name": "Chat",
          "icon": "$(comment-discussion)"
        }
      ]
    },
    "configuration": {
      "title": "Zen Coder Settings",
      "properties": {
        "zencoder.provider.anthropic.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable Anthropic (Claude) provider."
        },
        "zencoder.provider.google.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable Google (Gemini) provider."
        },
        "zencoder.provider.openrouter.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable OpenRouter provider."
        },
        "zencoder.provider.deepseek.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable DeepSeek provider."
        },
        "zencoder.tools.readFileTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'readFileTool' (reads file content, supports multiple files and encodings)."
        },
        "zencoder.tools.writeFileTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'writeFileTool' (writes/appends file content with encoding)."
        },
        "zencoder.tools.listFilesTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'listFilesTool' (lists directory contents with stats, supports recursion)."
        },
        "zencoder.tools.createFolderTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'createFolderTool' (creates directories)."
        },
        "zencoder.tools.getStatTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'getStatTool' (gets file/folder stats)."
        },
        "zencoder.tools.deleteFileTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'deleteFileTool' (deletes files, supports trash)."
        },
        "zencoder.tools.deleteFolderTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'deleteFolderTool' (deletes folders recursively, supports trash)."
        },
        "zencoder.tools.moveRenameTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'moveRenameTool' (moves/renames files/folders, supports overwrite)."
        },
        "zencoder.tools.copyFileTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'copyFileTool' (copies files, supports overwrite)."
        },
        "zencoder.tools.copyFolderTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'copyFolderTool' (copies folders recursively, supports overwrite)."
        },
        "zencoder.tools.fetchUrlTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'fetchUrlTool' (fetches content from a URL)."
        },
        "zencoder.tools.base64EncodeTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'base64EncodeTool' (encodes string to Base64)."
        },
        "zencoder.tools.base64DecodeTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'base64DecodeTool' (decodes Base64 to string)."
        },
        "zencoder.tools.md5HashTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'md5HashTool' (calculates MD5 hash)."
        },
        "zencoder.tools.sha256HashTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'sha256HashTool' (calculates SHA-256 hash)."
        },
        "zencoder.tools.uuidGenerateTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'uuidGenerateTool' (generates a v4 UUID)."
        },
        "zencoder.tools.jsonParseTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'jsonParseTool' (parses a JSON string)."
        },
        "zencoder.tools.jsonStringifyTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'jsonStringifyTool' (stringifies a JS object/array)."
        },
        "zencoder.tools.getOsInfoTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'getOsInfoTool' (gets OS information)."
        },
        "zencoder.tools.getCurrentTimeTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'getCurrentTimeTool' (gets current ISO time)."
        },
        "zencoder.tools.getTimezoneTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'getTimezoneTool' (gets system timezone)."
        },
        "zencoder.tools.getPublicIpTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'getPublicIpTool' (gets public IP address)."
        },
        "zencoder.tools.getOpenTabsTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'getOpenTabsTool' (lists open editor tabs)."
        },
        "zencoder.tools.getActiveTerminalsTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'getActiveTerminalsTool' (lists active terminals)."
        },
        "zencoder.tools.runCommandTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'runCommandTool' (runs command with options after confirmation)."
        },
        "zencoder.tools.getActiveEditorContextTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'getActiveEditorContextTool' (gets active editor path, language, selection)."
        },
        "zencoder.tools.replaceInActiveEditorTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'replaceInActiveEditorTool' (replaces selected text)."
        },
        "zencoder.tools.showInformationMessageTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'showInformationMessageTool' (shows an info notification)."
        },
        "zencoder.tools.showWarningMessageTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'showWarningMessageTool' (shows a warning notification)."
        },
        "zencoder.tools.showErrorMessageTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'showErrorMessageTool' (shows an error notification)."
        },
        "zencoder.tools.showInputBoxTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'showInputBoxTool' (prompts user for text input)."
        },
        "zencoder.tools.showQuickPickTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'showQuickPickTool' (shows a selection list to the user)."
        },
        "zencoder.tools.formatDocumentTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'formatDocumentTool' (formats the active document)."
        },
        "zencoder.tools.saveActiveFileTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'saveActiveFileTool' (saves the active file)."
        },
        "zencoder.tools.closeActiveFileTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'closeActiveFileTool' (closes the active file)."
        },
        "zencoder.tools.openFileTool.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the 'openFileTool' (opens a specified file)."
        },
        "zencoder.defaults.chatModelId": {
          "type": "string",
          "default": "anthropic:claude-3-5-sonnet-latest",
          "description": "Default model ID (providerId:modelName) to use for chat interactions.",
          "scope": "window"
        },
        "zencoder.defaults.imageGenerationModelId": {
          "type": "string",
          "default": "",
          "description": "Default model ID (providerId:modelName) to use for image generation (if supported). Leave empty if none.",
          "scope": "window"
        },
        "zencoder.defaults.instructionOptimizationModelId": {
          "type": "string",
          "default": "",
          "description": "Default model ID (providerId:modelName) to use for optimizing instructions (if supported). Leave empty if none.",
          "scope": "window"
        },
        "zencoder.customInstructions.global": {
          "type": "string",
          "default": "",
          "description": "Global custom instructions to prepend to every AI prompt. Applied across all projects.",
          "scope": "window",
          "markdownDescription": "Global custom instructions to prepend to every AI prompt. Applied across all projects. Use Markdown format. Project-specific instructions (in `.zen/custom_instructions.md`) will be appended after these."
        },
        "zencoder.mcp.servers": {
          "type": "array",
          "description": "Configure connections to Model Context Protocol (MCP) servers.",
          "default": [],
          "scope": "window",
          "items": {
            "type": "object",
            "title": "MCP Server Configuration",
            "required": [
              "name",
              "type",
              "enabled"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "A unique name for this server connection."
              },
              "enabled": {
                "type": "boolean",
                "description": "Enable or disable this server connection.",
                "default": true
              },
              "type": {
                "type": "string",
                "description": "The type of MCP transport.",
                "enum": [
                  "stdio",
                  "sse"
                ]
              },
              "command": {
                "type": "string",
                "description": "The command to execute for 'stdio' transport type."
              },
              "args": {
                "type": "array",
                "description": "Arguments for the command for 'stdio' transport type.",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "cwd": {
                "type": "string",
                "description": "Optional working directory for the 'stdio' command."
              },
              "url": {
                "type": "string",
                "description": "The URL for the 'sse' transport type.",
                "format": "uri"
              },
              "headers": {
                "type": "object",
                "description": "Optional headers for the 'sse' transport type.",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "allOf": [
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "stdio"
                    }
                  }
                },
                "then": {
                  "required": [
                    "command"
                  ]
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "sse"
                    }
                  }
                },
                "then": {
                  "required": [
                    "url"
                  ]
                }
              }
            ]
          }
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "pnpm run package",
    "compile": "pnpm run build:webview && pnpm run check-types && pnpm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:esbuild watch:tsc watch:webview",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "watch:webview": "pnpm --filter webview-ui dev",
    "build:webview": "pnpm --filter webview-ui build",
    "package": "pnpm run check-types && pnpm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "pnpm run compile-tests && pnpm run compile && pnpm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test",
    "webview-ui": "pnpm --filter webview-ui"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "~20.17.30",
    "@types/vscode": "^1.99.0",
    "@typescript-eslint/eslint-plugin": "^8.28.0",
    "@typescript-eslint/parser": "^8.28.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "esbuild": "^0.25.1",
    "eslint": "^9.23.0",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.8.2",
    "vitest": "^3.1.1"
  },
  "dependencies": {
    "@ai-sdk/anthropic": "^1.2.9",
    "@ai-sdk/deepseek": "^0.2.9",
    "@ai-sdk/google": "^1.2.10",
    "@ai-sdk/openai": "^1.3.10",
    "@openrouter/ai-sdk-provider": "^0.4.5",
    "@types/node-fetch": "^2.6.12",
    "@types/uuid": "^10.0.0",
    "ai": "^4.3.5",
    "node-fetch": "^3.3.2",
    "ollama-ai-provider": "^1.2.0",
    "uuid": "^11.1.0",
    "zod": "^3.24.2"
  }
}
